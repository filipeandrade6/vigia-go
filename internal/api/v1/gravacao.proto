syntax = "proto3";

option go_package = "./internal/api/v1";

package gravacao;

service Gravacao {
    rpc Registrar (RegistrarReq) returns (RegistrarRes) {}
    rpc RemoverRegistro (RemoverRegistroReq) returns (RemoverRegistroRes) {}

    rpc StartProcessos (StartProcessosReq) returns (StartProcessosRes) {}
    rpc StopProcessos (StopProcessosReq) returns (StopProcessosRes) {}
    rpc ListProcessos (ListProcessosReq) returns (ListProcessosRes) {}

    rpc AtualizarMatchlist (AtualizarMatchlistReq) returns (AtualizarMatchlistRes) {}

    rpc AtualizarHousekeeper (AtualizarHousekeeperReq) returns (AtualizarHousekeeperRes) {}
    rpc StartHousekeeper (StartHousekeeperReq) returns (StartHousekeeperRes) {}
    rpc StopHousekeeper (StopHousekeeperReq) returns (StopHousekeeperRes) {}
    rpc StatusHousekeeper (StatusHousekeeperReq) returns (StatusHousekeeperRes) {}

    rpc GetServidorInfo (GetServidorInfoReq) returns (GetServidorInfoRes) {}
}

message RegistrarReq {
    string servidor_gravacao_id = 1;
    string endereco_ip = 2;
    int32 porta = 3;
    string db_host = 4;
    string db_user = 5;
    string db_password = 6;
    string db_name = 7;
    int32 db_maxidleconns = 8;
    int32 db_maxopenconns = 9;
    string db_sslmode = 10;
}

message RegistrarRes {}

// ===================

message RemoverRegistroReq {}

message RemoverRegistroRes {}

// ===================

message StartProcessosReq {
    repeated string processos = 1;
}

message StartProcessosRes {}

message StopProcessosReq {
    repeated string processos = 1;
}

message StopProcessosRes {}

message ListProcessosReq {}

message ListProcessosRes {
    repeated string processos = 1;
}

// ===================

message AtualizarMatchlistReq {}

message AtualizarMatchlistRes {}

// ===================

message AtualizarHousekeeperReq {
    int32 horas_retencao = 1;
}

message AtualizarHousekeeperRes {}

message StartHousekeeperReq {}

message StartHousekeeperRes {}

message StopHousekeeperReq {}

message StopHousekeeperRes {}

message StatusHousekeeperReq{}

message StatusHousekeeperRes{
    bool status = 1;
}

// ===================

message GetServidorInfoReq{}

message GetServidorInfoRes{
    string armazenamento = 1;
    int32 horas_retencao = 2;
}